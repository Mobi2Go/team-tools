{"version":3,"sources":["webpack:///./src/pages/dooliz-menu-export-check.module.less","webpack:///./src/pages/dooliz-menu-export-check.js"],"names":["module","exports","MenuTextInput","name","value","setValue","htmlFor","id","placeholder","onChange","e","target","MenuFileInput","type","files","reader","FileReader","onload","file_content","result","readAsText","DoolizMenuExportCheck","useState","menu_json","setMenuJson","menu_file","setMenuFile","errors","setErrors","title","onClick","menu_content","content","JSON","parse","menus","categories","products","modifier_groups","modifiers","plus","forEach","menu","backend_name","push","item_type","category","product","modifier_group","modifier","Object","keys","key","plu","record","item","records","length","detectErrors","alert","map","error","className","styles","item_name"],"mappings":"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","file":"component---src-pages-dooliz-menu-export-check-js-ed5cdb4d1dba43fe9cce.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"dooliz-menu-export-check-module--error--Da3zU\",\"item_type\":\"dooliz-menu-export-check-module--item_type--2OcP-\",\"item_name\":\"dooliz-menu-export-check-module--item_name--2Gq5n\"};","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nimport styles from './dooliz-menu-export-check.module.less';\n\nconst detectErrors = (menu_content) => {\n    const content = JSON.parse(menu_content);\n    const errors = [];\n\n    const menus = {};\n    const categories = {};\n    const products = {};\n    const modifier_groups = {};\n    const modifiers = {};\n\n    const plus = {};\n\n    content.menus.forEach((menu) => {\n        if (menu.backend_name in menus) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'menu',\n                id: menu.backend_name,\n            });\n            return;\n        }\n        menus[menu.backend_name] = menu;\n    });\n\n    content.categories.forEach((category) => {\n        if (category.backend_name in categories) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'category',\n                id: category.backend_name,\n            });\n            return;\n        }\n        categories[category.backend_name] = category;\n    });\n\n    content.products.forEach((product) => {\n        if (product.backend_name in products) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'product',\n                id: product.backend_name,\n            });\n            return;\n        }\n        products[product.backend_name] = product;\n    });\n\n    content.modifier_groups.forEach((modifier_group) => {\n        if (modifier_group.backend_name in modifier_groups) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'modifier_group',\n                id: modifier_group.backend_name,\n            });\n            return;\n        }\n        modifier_groups[modifier_group.backend_name] = modifier_group;\n    });\n\n    content.modifiers.forEach((modifier) => {\n        if (modifier.backend_name in modifiers) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'modifier',\n                id: modifier.backend_name,\n            });\n            return;\n        }\n        modifiers[modifier.backend_name] = modifier;\n    });\n\n    Object.keys(menus).forEach((key) => {\n        const menu = menus[key];\n\n        menu.categories.forEach((backend_name) => {\n            if (!(backend_name in categories)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'category',\n                    id: backend_name,\n                });\n            }\n        });\n    });\n\n    Object.keys(categories).forEach((key) => {\n        const category = categories[key];\n\n        category.products.forEach((backend_name) => {\n            if (!(backend_name in products)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'product',\n                    id: backend_name,\n                });\n            }\n        });\n    });\n\n    Object.keys(products).forEach((key) => {\n        const product = products[key];\n\n        product.modifier_groups = product.modifier_groups || [];\n        product.modifier_groups.forEach((backend_name) => {\n            if (!(backend_name in modifier_groups)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'modifier_group',\n                    id: backend_name,\n                });\n            }\n        });\n\n        if (!('plu' in product) || !product.plu) {\n            errors.push({\n                type: 'EMPTY_PLU',\n                item_type: 'product',\n                id: key,\n            });\n        } else {\n            const record = {\n                item_type: 'product',\n                item: product,\n            };\n            if (product.plu in plus) {\n                plus[product.plu].push(record);\n            } else {\n                plus[product.plu] = [record];\n            }\n        }\n    });\n\n    Object.keys(modifier_groups).forEach((key) => {\n        const modifier_group = modifier_groups[key];\n\n        modifier_group.modifiers.forEach((backend_name) => {\n            if (!(backend_name in modifiers)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'modifier',\n                    id: backend_name,\n                });\n            }\n        });\n    });\n\n    Object.keys(modifiers).forEach((key) => {\n        const modifier = modifiers[key];\n\n        if (!('plu' in modifier) || !modifier.plu) {\n            errors.push({\n                type: 'EMPTY_PLU',\n                item_type: 'modifier',\n                id: key,\n            });\n        } else {\n            const record = {\n                item_type: 'modifier',\n                item: modifier,\n            };\n            if (modifier.plu in plus) {\n                plus[modifier.plu].push(record);\n            } else {\n                plus[modifier.plu] = [record];\n            }\n        }\n    });\n\n    Object.keys(plus).forEach((key) => {\n        const records = plus[key];\n\n        if (records.length === 1) {\n            return;\n        }\n\n        errors.push({\n            type: 'DUPLICATE_PLU',\n            records,\n        });\n    });\n\n    return errors;\n};\n\nconst MenuTextInput = ({ name, value, setValue }) => {\n    return (\n        <>\n            <label htmlFor={name}>JSON {name}</label>\n            <br />\n            <textarea\n                id={name}\n                placeholder={name}\n                value={value}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                }}\n            />\n        </>\n    );\n};\n\nconst MenuFileInput = ({ setValue }) => {\n    return (\n        <>\n            <input\n                type=\"file\"\n                onChange={(e) => {\n                    if (e.target.files[0]) {\n                        const reader = new FileReader();\n                        reader.onload = function () {\n                            const file_content = reader.result;\n                            setValue(file_content);\n                        };\n                        reader.readAsText(e.target.files[0]);\n                    } else {\n                        setValue(null);\n                    }\n                }}\n            />\n        </>\n    );\n};\n\nconst DoolizMenuExportCheck = () => {\n    const [menu_json, setMenuJson] = useState('');\n    const [menu_file, setMenuFile] = useState(null);\n    const [errors, setErrors] = useState(null);\n\n    return (\n        <Layout>\n            <SEO title=\"dooliz-menu-export-check\" />\n            <h2>dooliz-menu-export-check</h2>\n            <div>\n                <MenuTextInput\n                    name=\"menu\"\n                    value={menu_json}\n                    setValue={setMenuJson}\n                />\n                <br />\n                OR\n                <br />\n                <MenuFileInput setValue={setMenuFile} />\n            </div>\n\n            <br />\n            <button\n                type=\"button\"\n                onClick={() => {\n                    const menu_content = menu_json || menu_file;\n\n                    if (!menu_content) {\n                        alert('missing input');\n                        return;\n                    }\n\n                    try {\n                        setErrors(detectErrors(menu_content));\n                    } catch (e) {\n                        alert(e);\n                    }\n                }}\n            >\n                Detect errors\n            </button>\n            <br />\n            {errors && errors.length > 0 && (\n                <div>\n                    {errors.map((error) => {\n                        switch (error.type) {\n                            case 'DUPLICATE':\n                                return (\n                                    <div className={styles.error}>\n                                        Duplicate{' '}\n                                        <span className={styles.item_type}>\n                                            {error.item_type}\n                                        </span>{' '}\n                                        named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            case 'MISSING':\n                                return (\n                                    <div className={styles.error}>\n                                        Missing{' '}\n                                        <span className={styles.item_type}>\n                                            {error.item_type}\n                                        </span>{' '}\n                                        named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            case 'EMPTY_PLU':\n                                return (\n                                    <div className={styles.error}>\n                                        No PLU set for{' '}\n                                        <span className={styles.item_type}>\n                                            {error.item_type}\n                                        </span>{' '}\n                                        named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            case 'DUPLICATE_PLU':\n                                return (\n                                    <div className={styles.error}>\n                                        Multiple items with the same plu{' '}\n                                        <span className={styles.item_type}>\n                                            {error.records[0].item.plu}\n                                        </span>{' '}\n                                        named{' '}\n                                        <ul>\n                                            {error.records.map((record) => {\n                                                return (\n                                                    <li\n                                                        key={\n                                                            record.item\n                                                                .backend_name\n                                                        }\n                                                    >\n                                                        <span\n                                                            className={\n                                                                styles.item_name\n                                                            }\n                                                        >\n                                                            ({record.item_type})\n                                                            {\n                                                                record.item\n                                                                    .backend_name\n                                                            }\n                                                        </span>\n                                                    </li>\n                                                );\n                                            })}\n                                        </ul>\n                                    </div>\n                                );\n                            default:\n                        }\n                        return null;\n                    })}\n                </div>\n            )}\n        </Layout>\n    );\n};\n\nexport default DoolizMenuExportCheck;\n"],"sourceRoot":""}